CASA Guides Script Extractor and Benchmark Test Generator
=========================================================

Extract a python script from a CASA guides web page:

  $ python extractCASAscript.py URL

Create a benchmark test from a CASA guides web page or casapy script:

  $ python extractCASAscript.py -b URL

A bash script and parameter files are included to automate Python extraction
and benchmark test execution for 6 ALMA data sets.  See file descriptions below
for details. A master script, doom.bash, invokes all 6 benchmarking scripts
sequentially.  Report generation scripts produce a nice, neat table showing the
benchmark timing data for all tests.

Under ideal conditions a benchmarking cycle will involve only these commands:

  $ ./doom.bash
  $ ./report.bash outfile

To run a single benchmark test:

  $ ./benchmark.bash NGC3256Band3.bash

FILES
=====

extractCASAScript.py 

  The script extractor and benchmark test generator.

casa_call.py 

  Module for timing calls to casa tasks; contains a function for printing a
  summary from the extractCASAScript.py output file.  The scripts output by
  extractCASAScript.py in benchmark mode require this module.
  (extractCASAScript.py does not require this module.)

list_all_tasks.py 

  List all CASA tasks. This script can be used to update the list of CASA tasks
  in extractCASAScript.py.  This will need to be used when new tasks are added
  to CASA and used in the CASA Guides.

readcol.py 

  A module for reading tables of ASCII data. Imported by casa_call.py.  From
  http://code.google.com/p/agpy/source/browse/trunk/agpy/readcol.py

benchmark.bash

  Bash script that contains two functions: one for acquiring data and
  benchmarking data extraction; the other for benchmarking the execution of the
  casaguide.  (Yes, I am benchmarking the benchmark test!)
 
AntennaeBand7.bash, NGC3256Band3.bash, TWHydraBand7.bash, M100Band3.bash,
SgrABand6.bash,  2011.0.00367.S.bash

  Input parameter files for benchmark.bash.  These files are simple bash scripts
  that are invoked to set parameters for the respective data sets.

doom.bash

  The master script that runs all of the CASA Guide benchmark scripts above.
  One script to rule them all...

report.py

  Python script that generates a table summarizing the timing information in
  all casa_call.summarize_bench output files. The script takes a glob pattern
  and operates on all files matched by the pattern.

report.bash

  Bash script that invokes report.py on each host used for benchmarking,
  in the appropriate directory on each host, sends all output to a single file
  and then sorts the file and appends a table header.
