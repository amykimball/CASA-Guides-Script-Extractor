=========================================================
CASA Guides Script Extractor and Benchmark Test Generator
=========================================================

This package will extract the Python code from a CASA Guide and write it to
disk or optionally use the Python code to create a CASA benchmark test.  The
benchmark test returns a measurement of the total execution time for a CASA
script and also measurements of the time spent in each CASA task.

To extract a python script from a CASA guides web page simply type

  $ python extractCASAscript.py URL
  
where URL is the web address of the CASA Guide.  To create a benchmark test
from a CASA guide web page or casapy script type

  $ python extractCASAscript.py -b URLPATH
 
where URLPATH is the URL of the CASA guide or the path to the casapy script.

A bash script, benchmark.bash, and parameter files are included to automate
Python extraction and benchmark test execution for several ALMA data sets.  See
file descriptions below for details. A master script, doom.bash, invokes all
benchmarking scripts sequentially.  Report generation scripts produce a nice,
neat table showing the benchmark timing data for all tests.

Under ideal conditions a benchmarking cycle will involve only these commands:

  $ ./doom.bash
  $ ./report.bash outfile

To run a single benchmark test:

  $ ./benchmark.bash NGC3256Band3.bash

FILES
=====

extractCASAScript.py 

  The script extractor and benchmark test generator.  Invoke with the -h
  option for details.  Contains a convenience function for updating the list
  of CASA tasks used when generating benchmark tests.

casa_call.py 

  Module for timing calls to casa tasks; contains a function for printing a
  summary from the extractCASAScript.py output file.  The scripts output by
  extractCASAScript.py in benchmark mode require this module.
  (extractCASAScript.py does not require this module.)

list_all_tasks.py 

  List all CASA tasks. This script can be used to update the list of CASA tasks
  in extractCASAScript.py.  This will need to be used when new tasks are added
  to CASA and used in the CASA Guides.

readcol.py 

  A module for reading tables of ASCII data. Imported by casa_call.py.  From
  http://code.google.com/p/agpy/source/browse/trunk/agpy/readcol.py

benchmark.bash

  Bash script that contains two functions: one for acquiring data and
  benchmarking data extraction; the other for benchmarking the execution of the
  casaguide.  (Yes, I am benchmarking the benchmark test!)
 
AntennaeBand7.bash, NGC3256Band3.bash, TWHydraBand7.bash, M100Band3.bash,
SgrABand6.bash,  2011.0.00367.S.bash, IRAS16293Band9.bash

  Input parameter files for benchmark.bash.  These files are simple bash scripts
  that are invoked to set parameters for the respective data sets.

doom.bash

  The master script that runs all of the CASA Guide benchmark scripts above.
  Edit this script and set the directory of your source code before running.
  (One script to rule them all...) Actually, not all scripts above will run
  under the same version of CASA.  So, in reality this is...  One script to
  rule them all, but not at the same time...  

report.py

  Python script that generates a table summarizing the timing information in
  all casa_call.summarize_bench output files. The script takes a glob pattern
  and operates on all files matched by the pattern.

report.bash

  Bash script that invokes report.py on each host used for benchmarking,
  in the appropriate directory on each host, sends all output to a single file
  and then sorts the file and appends a table header.
